{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Splunk indexer configuration for an AWS deployment without indexer clustering.",
  "Resources": {
    "LicenseServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "SplunkSecurityGroup"
          },
          {
            "Ref": "SplunkSearchHeadSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "SplunkSubnet"
        },
        "InstanceType": "c3.xlarge",
        "KeyName": {
          "Ref": "KeyName"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "role",
            "Value": "splunklicense"
          },
          {
            "Key": "Name",
            "Value": "splunklicense"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "/sbin/service splunk stop\n",
                "usermod --expiredate 1 splunk\n",
                "export LOCALIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n",
                "export INSTANCEID=$(curl http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null)\n",
                "hostname splunklicense\n",
                "printf '%s\t%s\n' \"$LOCALIP\" 'splunklicense' >> /etc/hosts\n",
                "mv /opt/splunk/etc/passwd /opt/splunk/etc/passwd.bak\n",
                "mkdir -p /opt/splunk/etc/licenses/enterprise\n",
                "mkdir -p /opt/splunk/.splunk ; chown splunk:splunk /opt/splunk/.splunk\n",
                "/opt/splunk/bin/splunk enable boot-start -user splunk --accept-license\n",
                "sed -i 's/force-change-pass true//' /etc/init.d/splunk\n",
                "wget -O /opt/splunk/etc/licenses/enterprise/splunk.license ",
                {
                  "Ref": "LicenseURL"
                },
                " \n",
                "/opt/splunk/bin/splunk start --accept-license\n",
                "HOME=/opt/splunk && /opt/splunk/bin/splunk edit user admin -password ",
                {
                  "Ref": "SplunkAdminPassword"
                },
                " -role admin -auth admin:changeme\n",
                "touch /opt/splunk/etc/.ui_login\n",
                "/opt/splunk/bin/splunk add licenses /opt/splunk/etc/licenses/enterprise/splunk.license\n"
              ]
            ]
          }
        }
      }
    },
    "SplunkIndexerLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "DependsOn": "SplunkSearchHeadInstance",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {"VolumeSize": "100"}
          }
        ],
        "SecurityGroups": [{"Ref": "SplunkSecurityGroup"} ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyName"},
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "/sbin/service splunk stop\n",
                "usermod --expiredate 1 splunk\n",
                "mv /opt/splunk/etc/passwd /opt/splunk/etc/passwd.bak\n",
                "mkdir -p /opt/splunk/.splunk ; chown splunk:splunk /opt/splunk/.splunk\n",
                "export LOCALIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n",
                "printf '%s\t%s\n' \"",
                {
                  "Fn::GetAtt": [
                    "SplunkSearchHeadInstance",
                    "PrivateIp"
                  ]
                },
                "\" 'splunksearch' >> /etc/hosts\n",
                "/opt/splunk/bin/splunk enable boot-start -user splunk --accept-license\n",
                "sed -i 's/force-change-pass true//' /etc/init.d/splunk\n",
                "/opt/splunk/bin/splunk start --accept-license\n",
                "HOME=/opt/splunk /opt/splunk/bin/splunk edit user admin -password ",
                {
                  "Ref": "SplunkAdminPassword"
                },
                " -role admin -auth admin:changeme\n",
                "sleep 30 && curl -k -u admin:",
                {
                  "Ref": "SplunkAdminPassword"
                },
                " https://",
                {
                  "Fn::GetAtt": [
                    "SplunkSearchHeadInstance",
                    "PrivateIp"
                  ]
                },
                ":8089/services/search/distributed/peers -d name=$LOCALIP:8089 -d remoteUsername=admin -d remotePassword=",
                {
                  "Ref": "SplunkAdminPassword"
                },
                "\n",
                "/opt/splunk/bin/splunk edit licenser-localslave -master_uri 'https://",
                {
                  "Fn::GetAtt": [
                    "LicenseServerInstance",
                    "PrivateIp"
                  ]
                },
                ":8089' -auth admin:",
                {
                  "Ref": "SplunkAdminPassword"
                },
                "\n",
                "/opt/splunk/bin/splunk restart\n"
              ]
            ]
          }
        }
      }
    },
    "SplunkIndexerNodesASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [{"Ref": "SplunkSubnet"} ],
        "AvailabilityZones": [
          {
            "Fn::GetAtt": [
              "SplunkSubnet",
              "AvailabilityZone"
            ]
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "SplunkIndexerLaunchConfiguration"
        },
        "MinSize": {"Ref": "SplunkIndexerCount"},
        "MaxSize": {"Ref": "SplunkIndexerCount"},
        "DesiredCapacity": {"Ref": "SplunkIndexerCount"},
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"},
            "PropagateAtLaunch": true
          },
          {
            "Key": "role",
            "Value": "indexer",
            "PropagateAtLaunch": true
          }
        ]
      }
    }
  }
}