{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Splunk network configuration for an AWS deployment with a new VPC.  This template creates both the VPC Network ACL and relevant security groups.",
  "Parameters": {
    "SSHLocation": {
      "Description": "The IP address range that is allowed to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation.  Use 0.0.0.0/0 for no restrictions."
    },
    "VPCCIDR": {
      "Description": "The address space that will be assigned to the entire VPC where Splunk will reside. (Recommend at least a /16)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
     },
    "SplunkSubnet1CIDR": {
      "Description": "The address space that will be assigned to the first Splunk server subnet. (x.x.x.x/x notation)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "10.0.0.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "SplunkSubnet2CIDR": {
      "Description": "The address space that will be assigned to the second Splunk server subnet. (x.x.x.x/x notation)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "10.0.1.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {"Ref": "VPCCIDR"},
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"}
          }
        ]
      }
    },
    "SplunkSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": ["0", {"Fn::GetAZs": {"Ref": "AWS::Region"} } ] },
        "VpcId": {"Ref": "VPC"},
        "MapPublicIpOnLaunch": "true",
        "CidrBlock": {"Ref": "SplunkSubnet1CIDR"},
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"}
          }
        ]
      }
    },
    "SplunkSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": ["1", {"Fn::GetAZs": {"Ref": "AWS::Region"} } ]
        },
        "VpcId": {"Ref": "VPC"},
        "MapPublicIpOnLaunch": "true",
        "CidrBlock": {"Ref": "SplunkSubnet2CIDR"},
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"}
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"}
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"}
          }
        ]
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {"Ref": "RouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "SubnetRouteTable1Association": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SplunkSubnet1"},
        "RouteTableId": {"Ref": "RouteTable"}
      }
    },
    "SubnetRouteTable2Association": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SplunkSubnet2"},
        "RouteTableId": {"Ref": "RouteTable"}
      }
    },
    "SplunkNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Application",
            "Value": {"Ref": "AWS::StackId"}
          }
        ]
      }
    },
    "InboundSplunkSearchHeadACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "8000",
          "To": "8000"
        }
      }
    },
    "InboundSSHACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "101",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "SSHLocation"},
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "InboundSyslogACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "102",
        "Protocol": "17",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "SSHLocation"},
        "PortRange": {
          "From": "514",
          "To": "514"
        }
      }
    },
    "InboundResponsePortsACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "103",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        }
      }
    },
    "OutBoundHTTPACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "104",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "80",
          "To": "80"
        }
      }
    },
    "OutBoundHTTPSACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "105",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "443",
          "To": "443"
        }
      }
    },
    "OutBoundSSHACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "106",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "OutBoundResponsePortsACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"},
        "RuleNumber": "107",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        }
      }
    },
    "Subnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SplunkSubnet1"},
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"}
      }
    },
    "Subnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SplunkSubnet2"},
        "NetworkAclId": {"Ref": "SplunkNetworkAcl"}
      }
    },
    "SplunkSearchHeadSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable port 8000 for Splunk web interface",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "8000",
            "CidrIp": {"Ref": "SSHLocation"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8090",
            "ToPort": "8090",
            "CidrIp": {"Ref": "VPCCIDR"}
          }
        ]
      }
    },
    "SplunkSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "GroupDescription": "Enable SSH, and all Splunk-related ports except web interface",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "SSHLocation"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8089",
            "ToPort": "8089",
            "CidrIp": {"Ref": "VPCCIDR"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9997",
            "ToPort": "9997",
            "CidrIp": {"Ref": "VPCCIDR"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9887",
            "ToPort": "9887",
            "CidrIp": {"Ref": "VPCCIDR"}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "514",
            "ToPort": "514",
            "CidrIp": {"Ref": "VPCCIDR"}
          }
        ]
      }
    }
  },
  "Outputs": {
    "VPCID": {
      "Description": "VPC ID",
      "Value": {"Ref": "VPC"}
    },
    "VPCCIDR": {
      "Description": "VPC CIDR",
      "Value": {"Ref": "VPCCIDR"}
    },
    "PublicSubnet1ID": {
      "Description": "Public subnet 1 ID in Availability Zone 1",
      "Value": {"Ref": "SplunkSubnet1"}
    },
    "PublicSubnet1CIDR": {
        "Description": "Public subnet 1 CIDR in Availability Zone 1",
        "Value": {"Ref": "SplunkSubnet1CIDR"}
    },
    "PublicSubnet2ID": {
      "Description": "Public subnet 2 ID in Availability Zone 2",
      "Value": {"Ref": "SplunkSubnet2"}
    },
    "PublicSubnet2CIDR": {
        "Description": "Public subnet 2 CIDR in Availability Zone 2",
        "Value": {"Ref": "SplunkSubnet2CIDR"}
    }
  }
}